% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tcherry_step.R
\name{tcherry_step}
\alias{tcherry_step}
\title{Determine a t-cherry tree from data}
\usage{
tcherry_step(data, ...)
}
\arguments{
\item{data}{The data the tree structure should be based on.}

\item{...}{Additional arguments passed to \code{MI2} and
\code{MI3}.}
}
\value{
A list containing the following components:
\itemize{
\item \code{adj_matrix} The adjacency matrix for the t-cherry
tree.
\item \code{weight} The weight of the final t-cherry tree.
\item \code{cliques} A list containing the cliques (cherries) of
 the t-cherry tree.
\item \code{separators} A list containing the separators of a
junction tree for the t-cherry tree.
}
}
\description{
Determine the structure of a t-cherry tree
from data based on a greedy stepwise approach.
}
\details{
The algorithm for constructing the t-cherry tree from
data is based on an atempt to minimize the Kullback-Leibler
divergence. The first cherry is chosen as the triplet with
highest mutual information. This is the preliminary t-cherry
tree. Then all possible new cherries are added stepwise to this
tree and the weight \deqn{\sum MI3(Clique) - \sum MI2(Separator)}
is calculated.
The first sum is over the cliques and the second over the
separators of the junction tree of the preliminary t-cherry tree.
The one with the highest weight is chosen as the new preliminary
t-cherry tree, and the procedure is repeated untill all variables
has been added.
}
\examples{
set.seed(43)
var1 <- c(sample(c(1, 2), 100, replace = TRUE))
var2 <- var1 + c(sample(c(1, 2), 100, replace = TRUE))
var3 <- var1 + c(sample(c(0, 1), 100, replace = TRUE,
                        prob = c(0.9, 0.1)))
var4 <- c(sample(c(1, 2), 100, replace = TRUE))
var5 <- var2 + var3
var6 <- var1 - var4 + c(sample(c(1, 2), 100, replace = TRUE))
var7 <- c(sample(c(1, 2), 100, replace = TRUE))

data <- data.frame("var1" = as.character(var1),
                   "var2" = as.character(var2),
                   "var3" = as.character(var3),
                   "var4" = as.character(var4),
                   "var5" = as.character(var5),
                   "var6" = as.character(var6),
                   "var7" = as.character(var7))

# smooth used in both MI2 and MI3
(tch <- tcherry_step(data, smooth = 0.1))

# For plotting
library(gRbase)
library(Rgraphviz)
tcherry_tree <- as(tch$adj_matrix, "graphNEL")
plot(tcherry_tree)

# For probability propagation
library(gRain)
model <- grain(tcherry_tree, data = data, smooth = 0.1)
querygrain(model)
}
\seealso{
\code{\link{MI2}} and \code{\link{MI3}} for mutual
information of two and three variables respectively.
}
\author{
Katrine Kirkeby, \email{enir_tak@hotmail.com}

Maria Knudsen, \email{mariaknudsen@hotmail.dk}

Ninna Vihrs, \email{ninnavihrs@hotmail.dk}
}
