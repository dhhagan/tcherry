% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/k_tcherry_p_lookahead.R
\name{k_tcherry_p_lookahead}
\alias{k_tcherry_p_lookahead}
\title{Determine a k'th order t-cherry tree from data}
\usage{
k_tcherry_p_lookahead(data, k, p, ...)
}
\arguments{
\item{data}{The data the tree structure should be based on.}

\item{k}{The order of the t-cherry tree.}

\item{p}{The number of new cliques considered in one step.}

\item{...}{Additional arguments passed to \code{MIk}.}
}
\value{
A list containing the following components:
\itemize{
\item \code{adj_matrix} The adjacency matrix for the k'th order
t-cherry tree.
\item \code{weight} The weight of the final k'th order t-cherry tree.
\item \code{cliques} A list containing the cliques of
 the k'th order t-cherry tree.
\item \code{separators} A list containing the separators of a
junction tree for the k'th order t-cherry tree.
}
}
\description{
Determine the structure of a k'th order t-cherry tree
from data with realisations of n variables based on a greedy stepwise
approach. In each step p new cliques are added.
}
\details{
Notice that for \eqn{p = 1} it is the same as using
\code{k_tcherry_step} and for \eqn{p = n - (k - 1)} it is the same
as using \code{tcherry_complete_search}.

The algorithm for constructing the t-cherry tree from
data is based on an atempt to minimize the Kullback-Leibler
divergence by maximizing the weight
\deqn{\sum MI(clique) - \sum MI(separator).}
The first sum is over the cliques and the second over the
separators of the junction tree of the preliminary t-cherry tree.
In each step all possibilities of p new cliques are added to the
preliminary tree.
The one with the highest weight is chosen as the new preliminary
t-cherry tree, and the procedure is repeated untill all variables
has been added.
}
\examples{
set.seed(43)
var1 <- c(sample(c(1, 2), 100, replace = TRUE))
var2 <- var1 + c(sample(c(1, 2), 100, replace = TRUE))
var3 <- var1 + c(sample(c(0, 1), 100, replace = TRUE,
                        prob = c(0.9, 0.1)))
var4 <- c(sample(c(1, 2), 100, replace = TRUE))
var5 <- var2 + var3
var6 <- var1 - var4 + c(sample(c(1, 2), 100, replace = TRUE))

data <- data.frame("var1" = as.character(var1),
                   "var2" = as.character(var2),
                   "var3" = as.character(var3),
                   "var4" = as.character(var4),
                   "var5" = as.character(var5),
                   "var6" = as.character(var6))

# smooth used in MIk
(tch <- k_tcherry_p_lookahead(data, k = 3, p = 2, smooth = 0.1))

# For plotting
library(gRbase)
library(Rgraphviz)
tcherry_tree <- as(tch$adj_matrix, "graphNEL")
plot(tcherry_tree)

# For probability propagation
library(gRain)
model <- grain(tcherry_tree, data = data, smooth = 0.1)
querygrain(model)
}
\seealso{
\code{\link{MIk}} for mutual
information of k variables.
}
\author{
Katrine Kirkeby, \email{enir_tak@hotmail.com}

Maria Knudsen, \email{mariaknudsen@hotmail.dk}

Ninna Vihrs, \email{ninnavihrs@hotmail.dk}
}
